---
import type { Server } from '@tomic/lib';
import { getStore } from '../../atomic/getStore';
import type { Blogpost } from '../../ontologies/website';

type Props = {
  subject: string;
};

const { subject } = Astro.props;

const store = getStore();
const resource = await store.getResource<Blogpost>(subject);
const image = await store.getResource<Server.File>(resource.props.coverImage);

const formatter = new Intl.DateTimeFormat('default', {
  year: 'numeric',
  month: 'long',
  day: 'numeric',
});

const date = formatter.format(new Date(resource.props.publishedAt));
---

<a class='card' href={resource.props.href}>
  <div class='image-wrapper'>
    <img src={image.props.downloadUrl} alt='' />
  </div>
  <div class='card-content'>
    <div class='publish-date'>{date}</div>
    <h2>{resource.title}</h2>
    <p>{resource.props.description.slice(0, 300)}...</p>
  </div>
</a>

<style>
  .card {
    --border-color: var(--t-colors-border);
    text-decoration: none;
    color: var(--t-colors-text);
    display: block;
    border: 1px solid var(--border-color);
    border-radius: var(--t-border-radius);
    overflow: clip;
    & img {
      aspect-ratio: 21 / 9;
      object-fit: cover;
      transition: transform 300ms ease-in-out;
    }

    &:hover {
      & img {
        transform: scale(1.1);
      }
    }
  }

  .publish-date {
    color: var(--t-colors-text-light);
  }
  .image-wrapper {
    aspect-ratio: 21 / 9;
    overflow: clip;
  }

  .card-content {
    padding: 1rem;
    height: 15rem;
    overflow: clip;
    position: relative;
    &::after {
      content: '';
      pointer-events: none;
      position: absolute;
      inset: 0;
      background: linear-gradient(0deg, white 0%, transparent 100%);
    }
  }

  h2 {
    font-size: 1.2rem;
    margin: 0;
    text-wrap: balance;
  }

  p {
    color: black;
  }
</style>
